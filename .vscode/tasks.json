{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: gcc.exe build active file",
            "command": "C:\\MinGW\\bin\\gcc.exe",
            "args": [
                "-fdiagnostics-color=always",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "label": "Compile All Tests",
            "type": "shell",
            "command": "cd ${workspaceFolder} && gcc -Wall -g -I. -c tests/common_test_utils.c -o tests/common_test_utils.o && gcc -Wall -g -I. -c tests/menu_test_functions.c -o tests/menu_test_functions.o && gcc -Wall -g -I. -c tests/api_test_functions.c -o tests/api_test_functions.o && gcc -Wall -g -I. -c tests/integration/api/api_transaction_test.c -o tests/integration/api/api_transaction_test.o && gcc -Wall -g -I. -c tests/integration/menu/menu_navigation_test.c -o tests/integration/menu/menu_navigation_test.o && gcc -Wall -g -I. -c tests/integration/combined/end_to_end_test.c -o tests/integration/combined/end_to_end_test.o",
            "group": "build",
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Build API Tests",
            "type": "shell",
            "command": "cd ${workspaceFolder} && mkdir -Force bin/testing && gcc -Wall -g -I. tests/integration/api/api_transaction_test.o tests/common_test_utils.o tests/api_test_functions.o -o bin/testing/api_transaction_test.exe",
            "group": "build",
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": [
                "Compile All Tests"
            ]
        },
        {
            "label": "Build Menu Tests",
            "type": "shell",
            "command": "cd ${workspaceFolder} && mkdir -Force bin/testing && gcc -Wall -g -I. tests/integration/menu/menu_navigation_test.o tests/common_test_utils.o tests/menu_test_functions.o tests/api_test_functions.o -o bin/testing/menu_navigation_test.exe",
            "group": "build",
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": [
                "Compile All Tests"
            ]
        },
        {
            "label": "Build End-to-End Tests",
            "type": "shell",
            "command": "cd ${workspaceFolder} && mkdir -Force bin/testing && gcc -Wall -g -I. tests/integration/combined/end_to_end_test.o tests/common_test_utils.o tests/menu_test_functions.o tests/api_test_functions.o -o bin/testing/end_to_end_test.exe",
            "group": "build",
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": [
                "Compile All Tests"
            ]
        },
        {
            "label": "Build All Tests",
            "dependsOn": [
                "Build API Tests",
                "Build Menu Tests",
                "Build End-to-End Tests"
            ],
            "group": "build"
        },        {
            "label": "Run API Tests",
            "type": "shell",
            "command": "cd ${workspaceFolder} && bin\\testing\\api_transaction_test.exe",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "dependsOn": [
                "Build API Tests"
            ]
        },
        {
            "label": "Run Menu Tests",
            "type": "shell",
            "command": "cd ${workspaceFolder} && bin\\testing\\menu_navigation_test.exe",
            "group": "test",
            "dependsOn": [
                "Build Menu Tests"
            ]
        },
        {
            "label": "Run End-to-End Tests",
            "type": "shell",
            "command": "cd ${workspaceFolder} && bin\\testing\\end_to_end_test.exe",
            "group": "test",
            "dependsOn": [
                "Build End-to-End Tests"
            ]
        },        {
            "label": "Run All Tests",
            "type": "shell",
            "command": "cd ${workspaceFolder} && echo ===== RUNNING API TESTS ===== && bin\\testing\\api_transaction_test.exe && echo. && echo ===== RUNNING MENU TESTS ===== && bin\\testing\\menu_navigation_test.exe && echo. && echo ===== RUNNING END-TO-END TESTS ===== && bin\\testing\\end_to_end_test.exe",
            "group": "test",
            "dependsOn": [
                "Build API Tests",
                "Build Menu Tests",
                "Build End-to-End Tests"
            ]
        },        {
            "label": "Clean",
            "type": "shell",
            "command": "cd ${workspaceFolder} && rm -Force tests/*.o tests/integration/api/*.o tests/integration/menu/*.o tests/integration/combined/*.o bin/testing/*.exe",
            "group": "none",
            "problemMatcher": []
        },
        {
            "label": "Compile Performance Regression Checker",
            "type": "shell",
            "command": "cd ${workspaceFolder}; if (-not (Test-Path \"bin\\testing\")) { New-Item -Path \"bin\\testing\" -ItemType Directory -Force }; gcc -Wall -g -I. tests/performance_regression_check.c -o bin/testing/check_performance.exe",
            "group": "build",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Run Performance Regression Check",
            "type": "shell",
            "command": "cd ${workspaceFolder}; bin\\testing\\check_performance.exe --threshold 15.0 --verbose",
            "group": "test",
            "dependsOn": [
                "Compile Performance Regression Checker"
            ],
            "problemMatcher": []
        },
        {
            "label": "Test and Analyze Results",
            "type": "shell",
            "command": "cd ${workspaceFolder}; .\\tests\\run_test_analysis.ps1",
            "group": "test",
            "problemMatcher": []
        }
    ]
}